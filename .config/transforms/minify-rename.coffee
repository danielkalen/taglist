module.exports = (file, options, file_, content)->
	if options._flags.debug
		return content
	else
		output = content
		replacements.forEach (replacement)->
			source = replacement[0]
			dest = replacement[1]

			output = output.replace(source, dest)
		return output


replacements = [
	[/iterable/g, 'iT']
	[/domEl/g, 'dE']
	[/domText/g, 'dT']
	[/domNode/g, 'dN']
	[/quickDomEl/g, 'qE']
	[/defined:/g, 'De:']
	[/\.defined/g, '.De']
	[/array:/g, 'Ar:']
	[/\.array/g, '.Ar']
	[/objectPlain:/g, 'ObP:']
	[/\.objectPlain/g, '.ObP']
	[/object:/g, 'Ob:']
	[/\.object/g, '.Ob']
	[/string:/g, 'St:']
	[/\.string/g, '.St']
	[/number:/g, 'Nu:']
	[/\.number/g, '.Nu']
	
	[/includes/g, 'In']
	[/removeItem/g, 'R']
	[/normalizeGivenEl/g, 'N']
	[/registerStyle/g, 'rC']
	[/_parsed/g, '_']
	[/_parent/g, '_p']
	[/_state/g, '_s']
	[/_mediaStates/g, '_m']
	[/_providedStatesShared/g, '_psh']
	[/_providedStates/g, '_ps']
	[/_texts/g, '_t']
	[/_styles/g, '_st']
	[/_stylesShared/g, '_stS']
	# [/_styleEntries/g, '_se']
	[/_children/g, '_c']
	[/_childRefs/g, '_C']
	[/_eventCallbacks/g, '_e']
	[/_inserted/g, '_I']
	[/_normalizeOptions/g, '_n']
	[/_parseStyles/g, '_Ps']
	[/_parseTexts/g, '_Pt']
	[/_applyOptions/g, '_a']
	[/_attachStateEvents/g, '_ae']
	[/_invokeHandlers/g, '_ih']
	[/_listenTo/g, '_l']
	[/_refreshParent/g, '_rP']
	[/_removeChild/g, '_r']
	[/_getActiveStates/g, '_as']
	[/_getSuperiorStates/g, '_ss']
	[/_getSharedStates/g, '_shs']
	[/_resolveFnStyles/g, '_rS']
	[/_statePipeTarget/g, '_pt']
	[/_turn/g, '_T']
	# [/_turnStyleON/g, '_ts1']
	# [/_turnStyleOFF/g, '_ts0']
	# [/_turnTextON/g, '_tt1']
	# [/_turnTextOFF/g, '_tt0']
	[/_proxyParent/g, '_pp']
	[/_unproxyParent/g, '_up']
	[/_hasComputers/g, 'hC']
	[/_runComputer/g, 'rc']
	[/__refs/g, '_R']
	[/returnResults/g, 'rR']
	[/lastResults/g, 'lR']
	[/parseQuery/g, 'pQ']
	[/register/g, 'rg']
]
